openapi: 3.0.3
info:
  title: 실시간 발표 피드백 서비스 API
  version: 1.0.0
  description: JWT + Refresh Token 기반 인증을 사용하는 로그인/회원가입 API 명세서

servers:
  - url: http://localhost:3000
    description: Local development server

paths:
  /auth/signup:
    post:
      summary: 회원가입
      description: 사용자 정보를 등록하여 계정을 생성
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
              properties:
                name:
                  type: string
                  example: 홍길동
                email:
                  type: string
                  format: email
                  example: test@example.com
                password:
                  type: string
                  format: password
                  example: "Password123!"
                
      responses:
        '201':
          description: 계정 생성 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 회원가입 성공
        '409':
          description: 이메일 중복 에러
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 이미 사용 중인 이메일입니다.

  /auth/login:
    post:
      summary: 로그인
      description: 이메일과 비밀번호로 로그인하고 JWT Access Token 및 Refresh Token 발급
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: test@example.com
                password:
                  type: string
                  format: password
                  example: "Password123!"
      responses:
        '200':
          description: 로그인 성공
          headers:
            Set-Cookie:
              description: Refresh Token 쿠키(HttpOnly, Secure)
              schema:
                type: string
                example: refreshToken=abcdef12345; HttpOnly; Secure
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                  message:
                    type: string
                    example: 로그인 성공
        '401':
          description: 인증 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 이메일 또는 비밀번호가 올바르지 않습니다.

  /auth/refresh:
    post:
      summary: Access Token 갱신
      description: Refresh Token 쿠키를 사용하여 새 Access Token 발급
      responses:
        '200':
          description: 토큰 갱신 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                  message:
                    type: string
                    example: Access Token 갱신 성공
        '401':
          description: Refresh Token 유효하지 않음
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Refresh Token 만료 또는 유효하지 않음

  /auth/logout:
    post:
      summary: 로그아웃
      description: Refresh Token 무효화 및 클라이언트 쿠키 삭제
      responses:
        '200':
          description: 로그아웃 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 로그아웃 성공
  /users/me:
    get:
      summary: 회원 정보 조회
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 사용자 정보 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: string
                    example: "user01"
                  name:
                    type: string
                    example: "홍길동"
                  email:
                    type: string
                    example: "user01@example.com"
                  
    patch:
      summary: 회원 정보 수정
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "홍길동"

      responses:
        '200':
          description: 회원 정보 수정 완료
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "회원 정보가 업데이트되었습니다."
    delete:
      summary: 회원 탈퇴
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 회원 탈퇴 완료
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "회원 탈퇴가 완료되었습니다."

  /sessions/start:
    post:
      summary: 세션 시작
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mode:
                  type: string
                  example: "practice"  # or "test"
                school:
                  type: string
                  example: "대학생"
                subject:
                  type: string
                  example: "과학"
                topic:
                  type: string
                  example: "발표 주제"
                feedbacktype:
                  type: integer
                  example: 1  # or 2, 3
                timelimit:
                  type: integer
                  example: 10  # 발표 시간 제한 (분)
                script:
                  type: string
                  example: "발표 원고"  # 선택 사항

      responses:
        '200':
          description: 세션 시작 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  session_id:
                    type: string
                    example: "abcd1234"
                  message:
                    type: string
                    example: "세션 시작"

  /sessions/{session_id}/end:
    post:
      summary: 세션 종료 (사후 피드백)
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
            example: "abcd1234"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                spoken_text:
                  type: string
                  example: "실제 발화 텍스트"
      responses:
        '200':
          description: 사후 피드백 결과
          content:
            application/json:
              schema:
                type: object
                properties:
                  scores:
                    type: object
                    properties:
                      pronunciation:
                        type: integer
                        example: 85
                      content_analysis:
                        type: integer
                        example: 90
                      expression:
                        type: integer
                        example: 80
                      posture:
                        type: integer
                        example: 75
                      final_score:
                        type: integer
                        example: 83
                  feedback_text:
                    type: string
                    example: "발음은 정확했으나 시선 처리와 자세가 조금 불안정했습니다."

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    RealTimeFeature:
      type: object
      properties:
        speechRate:
          type: number
          example: 120
          description: 말 속도 (단어/분)
        volumeStability:
          type: number
          example: 0.8
        gaze:
          type: object
          properties:
            x:
              type: number
              example: 0.5
            y:
              type: number
              example: 0.4
        posture:
          type: object
          properties:
            tilt:
              type: number
              example: 5
            sway:
              type: number
              example: 2

    RealTimeFeedback:
      type: object
      properties:
        scores:
          type: object
          properties:
            speechRate:
              type: number
              example: 85
            volumeStability:
              type: number
              example: 90
            gazeStability:
              type: number
              example: 80
            postureStability:
              type: number
              example: 75
        feedbackText:
          type: string
          example: "말 속도와 시선이 안정적이지만 자세가 약간 흔들립니다."